trigger:
  - main  # Runs on changes to the main branch
resources:
  repositories:
  - repository: self
    type: git
    name: Cronto Project
    ref: main # referring it to main branch
    public: true  # ðŸ‘ˆ Explicitly declare as public

variables:
  DOCKERHUB_REPO: 'nizam799/django'  # Format: <username>/<repo>
  VM_IP: '20.169.224.172'            # Replace with your VM's IP
  VM_USERNAME: 'snp'      # SSH username
  IPADD: '*'
  CONTNAME: 'cronto'
  VERSION: 'testV2'

stages:
  - stage: BuildAndPush
    displayName: Build and Push Docker Image
    jobs:
      - job: Build
        pool:
          name: 'Crontovmagent'
        steps:
          - checkout: self  # Pulls code from Azure Repos

          # Log in to Docker Hub using a service connection
          - task: Docker@2
            displayName: Login to Docker Hub
            inputs:
              command: login
              containerRegistry: 'Azure-Dev-Py-Doc'  # Name of your Docker Hub service connection

          # Build and push to Docker Hub
          - task: Docker@2
            displayName: Build and Push image to Docker Hub
            inputs:
              command: buildAndPush
              repository: $(DOCKERHUB_REPO)
              dockerfile: '**/Dockerfile'
              tags: $(VERSION)

  - stage: DeployToVM
    displayName: Deploy to Ubuntu VM
    dependsOn: BuildAndPush
    jobs:
      - job: Deploy
        pool:
          name: 'Crontovmagent'
        steps:
        - task: SSH@0
          inputs:
            sshEndpoint: 'SSHPOINT'
            runOptions: 'commands'
            commands: |
                docker pull $(DOCKERHUB_REPO):$(VERSION) || echo "Pull Failed"
                docker stop $(CONTNAME) 2>/dev/null || echo "No Container to stop"
                docker rm $(CONTNAME) 2>/dev/null || echo "No container to remove"
                docker run -d --restart unless-stopped -p 8000:8000 --name $(CONTNAME) -e IPADD=$(IPADD) $(DOCKERHUB_REPO):$(VERSION)
              
          displayName: 'SSH and Run Container'